#include <Dersbiander/dersbiander.hpp>

#include <catch2/catch_test_macros.hpp>

TEST_CASE("corrected format for Tokentype", "[token_type]") {
    using enum TokenType;
    REQUIRE(FORMAT("{}", IDENTIFIER) == "IDENTIFIER");
    REQUIRE(FORMAT("{}", CHAR) == "CHAR");
    REQUIRE(FORMAT("{}", BOOLEAN) == "BOOLEAN");
    REQUIRE(FORMAT("{}", INTEGER) == "INTEGER");
    REQUIRE(FORMAT("{}", DOUBLE) == "DOUBLE");
    REQUIRE(FORMAT("{}", STRING) == "STRING");
    REQUIRE(FORMAT("{}", OPERATOR) == "OPERATOR");
    REQUIRE(FORMAT("{}", MINUS_OPERATOR) == "MINUS_OPERATOR");
    REQUIRE(FORMAT("{}", EQUAL_OPERATOR) == "EQUAL_OPERATOR");
    REQUIRE(FORMAT("{}", OPERATION_EQUAL) == "OPERATION_EQUAL");
    REQUIRE(FORMAT("{}", BOOLEAN_OPERATOR) == "BOOLEAN_OPERATOR");
    REQUIRE(FORMAT("{}", NOT_OPERATOR) == "NOT_OPERATOR");
    REQUIRE(FORMAT("{}", LOGICAL_OPERATOR) == "LOGICAL_OPERATOR");
    REQUIRE(FORMAT("{}", UNARY_OPERATOR) == "UNARY_OPERATOR");
    REQUIRE(FORMAT("{}", COMMA) == "COMMA");
    REQUIRE(FORMAT("{}", COLON) == "COLON");
    REQUIRE(FORMAT("{}", OPEN_BRACKETS) == "OPEN_BRACKETS");
    REQUIRE(FORMAT("{}", CLOSED_BRACKETS) == "CLOSED_BRACKETS");
    REQUIRE(FORMAT("{}", OPEN_SQUARE_BRACKETS) == "OPEN_SQUARE_BRACKETS");
    REQUIRE(FORMAT("{}", CLOSED_SQUARE_BRACKETS) == "CLOSED_SQUARE_BRACKETS");
    REQUIRE(FORMAT("{}", OPEN_CURLY_BRACKETS) == "OPEN_CURLY_BRACKETS");
    REQUIRE(FORMAT("{}", CLOSED_CURLY_BRACKETS) == "CLOSED_CURLY_BRACKETS");
    REQUIRE(FORMAT("{}", KEYWORD_MAIN) == "KEYWORD_MAIN");
    REQUIRE(FORMAT("{}", KEYWORD_VAR) == "KEYWORD_VAR");
    REQUIRE(FORMAT("{}", KEYWORD_STRUCTURE) == "KEYWORD_STRUCTURE");
    REQUIRE(FORMAT("{}", KEYWORD_FOR) == "KEYWORD_FOR");
    REQUIRE(FORMAT("{}", KEYWORD_FUNC) == "KEYWORD_FUNC");
    REQUIRE(FORMAT("{}", KEYWORD_RETURN) == "KEYWORD_RETURN");
    REQUIRE(FORMAT("{}", COMMENT) == "COMMENT");
    REQUIRE(FORMAT("{}", EOFT) == "EOF");
    REQUIRE(FORMAT("{}", ERROR) == "ERROR");
    REQUIRE(FORMAT("{}", UNKNOWN) == "UNKNOWN");
}